% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_ggenrich.R
\name{auto_ggenrich}
\alias{auto_ggenrich}
\title{Make enrichment factor plot.}
\usage{
auto_ggenrich(
  .data,
  .data_ref,
  .mapping,
  .mapping_ref,
  .xlim,
  .ylim,
  .xlab = expression(paste(italic("ε"^{     13 }), "C", " (‰)")),
  .ylab = expression(paste(italic("ε"^{     15 }), "N", " (‰)")),
  .point_size = 3,
  .stroke = 1,
  .shape_val = c(16, 17, 24),
  .width = 0.3,
  .height = 0.3,
  .linesize = 0.6,
  .axis_size = 0.6,
  .linetype = "dashed",
  .hjust = 0,
  .vjust = 0,
  .x_breaks = scales::breaks_extended(6),
  .y_breaks = scales::breaks_extended(6),
  .family = "Arial",
  .label_size = 4,
  .lab_title_size = 15,
  .lab_text_size = 12,
  .ratio = 2/3,
  .multi = F,
  ...
)
}
\arguments{
\item{.data}{data.}

\item{.data_ref}{data of reference autotrophic plants.}

\item{.mapping}{mapping, wrapping by aes(), augments passing through geom_***.}

\item{.mapping_ref}{mapping, reference data set.}

\item{.xlim}{range of x axis.}

\item{.ylim}{range of y axis.}

\item{.xlab}{title of x axis.}

\item{.ylab}{title of y axis.}

\item{.point_size}{size of point.}

\item{.stroke}{edge of point}

\item{.shape_val}{shape of point, passing scale_shape_manual().}

\item{.width}{width of error bar.}

\item{.height}{height of error bar.}

\item{.linesize}{width of line in error bar.}

\item{.linetype}{dashed or dotted and so on.}

\item{.hjust}{place of label (horizontal).}

\item{.vjust}{place of label (vertical).}

\item{.x_breaks}{break of x.}

\item{.y_breaks}{break of y.}

\item{.family}{font family, default Arial.}

\item{.label_size}{label size.}

\item{.lab_title_size}{axis title.}

\item{.lab_text_size}{axis text}

\item{.ratio}{ratio of plot.}

\item{.multi}{logical}

\item{...}{passed through theme().}
}
\description{
Make enrichment factor plot. If you regulate more options, use ggenrich().
}
\examples{
library(ggplot2)
library(dplyr)
library(stringr)

data("demo")

# summarise data.
by_place <- demo \%>\%
  group_by(place, label) \%>\%
  summarise(across(where(is.numeric),
                   list(mean = mean, sd = sd),
                   .names = "{.fn}_{.col}")) \%>\%
  filter(place == "A")

# select "place is A".
val <- by_place \%>\%
  filter(str_detect(label, "target"))

# reference data.
ref <- by_place \%>\%
 filter(str_detect(label, "ref"))

# make plot (default).
auto_ggenrich(.data = val,
              .data_ref = ref,
              .mapping = aes(x = mean_epsilon13C, y = mean_epsilon15N,
                             xmin = mean_epsilon13C - sd_epsilon13C,
                             xmax = mean_epsilon13C + sd_epsilon13C,
                             ymin = mean_epsilon15N - sd_epsilon15N,
                             ymax = mean_epsilon15N + sd_epsilon15N,
                             shape = label,
                             label = label),
              .mapping_ref = aes(xmin = mean_epsilon13C - sd_epsilon13C,
                                 xmax = mean_epsilon13C + sd_epsilon13C,
                                 ymin = mean_epsilon15N - sd_epsilon15N,
                                 ymax = mean_epsilon15N + sd_epsilon15N),
              .xlim = c(-5, 3),
              .ylim = c(-3, 5),
              .family = NULL,
              .x_breaks = seq(-5, 3, 1),
              .y_breaks = seq(-3, 5, 1))

# make plot (manual).
auto_ggenrich(.data = val,
              .data_ref = ref,
              .mapping = aes(x = mean_epsilon13C, y = mean_epsilon15N,
                             xmin = mean_epsilon13C - sd_epsilon13C,
                             xmax = mean_epsilon13C + sd_epsilon13C,
                             ymin = mean_epsilon15N - sd_epsilon15N,
                             ymax = mean_epsilon15N + sd_epsilon15N,
                             shape = label,
                             label = label),
              .mapping_ref = aes(xmin = mean_epsilon13C - sd_epsilon13C,
                                 xmax = mean_epsilon13C + sd_epsilon13C,
                                 ymin = mean_epsilon15N - sd_epsilon15N,
                                 ymax = mean_epsilon15N + sd_epsilon15N),
              .xlim = c(-5, 3),
              .ylim = c(-3, 5),
              .xlab = expression(paste(italic("δ"^{13}), "C", " (\u2030)")),
              .ylab = expression(paste(italic("δ"^{15}), "N", " (\u2030)")),
              .hjust = 0, .vjust = 0,
              .height = .2, .width = .2,
              .stroke = 1,
              .linesize = .8,
              .axis_size = .8,
              .shape_val = c(24, 21, 16, 23),
              .x_breaks = scales::breaks_extended(6),
              .y_breaks = scales::breaks_extended(6),
              .family = NULL,
              .lab_title_size = 15,
              .lab_text_size = 12,
              .label_size = 4,
              .point_size = 3,
              .ratio = 1/2,
              .multi = F)
}
